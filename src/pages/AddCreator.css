/* TODO (priority-ordered checklist):
	 1) Display at least five content creators on the homepage (implement `ShowCreators` and render a list of >=5 items).
	 2) Each creator item must include: name, a link to their channel/page (open in new tab), and a short description.
	 3) All API calls must use async/await (use `fetch` or `axios`); centralize API calls in a data layer or use `src/client.js`.
	 4) Clicking a creator navigates to a detail page with a unique URL (`/creators/:id`) showing name, url, and description (implement `ViewCreator`).
	 5) Provide edit functionality (`EditCreator`) to change name, url, or description; persist changes via API and reflect updates in the list.
	 6) Provide delete functionality with confirmation; after delete, remove the creator from the list and navigate appropriately.
	 7) Add new creators via `AddCreator` (name, url, description); after successful add, ensure the new creator appears in the homepage list.
	 8) Use optimistic UI updates or re-fetch the list after create/edit/delete to keep the UI in sync.
	 9) Move sensitive keys (Supabase or other) to environment variables and never commit them; use `src/client.js` as a lightweight wrapper.
	 10) Add loading, error, and empty states for all list/detail pages and form submissions; add client-side validation for forms.
	 11) Ensure pages are accessible (keyboard focus, ARIA labels) and add `prefers-reduced-motion` support.
	 12) Add tests for the CRUD flows (unit + integration) once the routes and API layer are implemented.
*/

/* TODO AddCreator.css next tasks:
	 - Move repeating hero/background styles into shared utilities
	 - Add ARIA and focus-visible styles for better accessibility
	 - Add prefers-reduced-motion handling for animations and hover effects
*/

/* AddCreator.css - Styles for the Add Creator form */

.form-container {
	position: relative;
	z-index: 2;
	max-width: 800px;
	margin: 0 auto;
	padding: 2rem;
	background: rgba(0, 0, 0, 0.3);
	backdrop-filter: blur(10px);
	animation: fadeInUp 1s ease-out 0.6s both;
}

.creator-form {
	display: flex;
	flex-direction: column;
	gap: 1.5rem;
}

.form-group {
	display: flex;
	flex-direction: column;
}

.form-label {
	color: white;
	font-weight: 600;
	margin-bottom: 0.5rem;
	font-size: 1.1rem;
}

.social-label {
	display: flex;
	align-items: center;
	gap: 0.5rem;
}

.social-icon {
	font-size: 1.2rem;
}

.form-description {
	color: rgba(255, 255, 255, 0.7);
	font-size: 0.9rem;
	margin-bottom: 0.5rem;
	font-style: italic;
}

.form-input,
.form-textarea {
	padding: 1rem;
	border: none;
	border-radius: 8px;
	background: rgba(255, 255, 255, 0.95);
	font-size: 1rem;
	transition: all 0.3s ease;
	font-family: inherit;
}

.form-input:focus,
.form-textarea:focus {
	outline: none;
	background: rgba(255, 255, 255, 1);
	box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.3);
}

.form-input::placeholder {
	color: rgba(0, 0, 0, 0.5);
}

.form-textarea {
	resize: vertical;
	min-height: 100px;
	line-height: 1.5;
}

.social-links-section {
	margin-top: 2rem;
	padding-top: 2rem;
	border-top: 1px solid rgba(255, 255, 255, 0.3);
}

.social-title {
	color: #60a5fa;
	font-size: 1.5rem;
	font-weight: 700;
	margin-bottom: 0.5rem;
	letter-spacing: 0.1em;
	text-transform: uppercase;
}

.social-description {
	color: rgba(255, 255, 255, 0.7);
	margin-bottom: 2rem;
	font-style: italic;
	font-size: 0.95rem;
}

.submit-button {
	background: rgba(59, 130, 246, 0.9);
	border: none;
	border-radius: 8px;
	color: white;
	padding: 1.5rem 3rem;
	font-size: 1.1rem;
	font-weight: 700;
	text-transform: uppercase;
	letter-spacing: 0.1em;
	cursor: pointer;
	transition: all 0.3s ease;
	margin-top: 2rem;
	align-self: center;
	min-width: 200px;
	font-family: inherit;
}

.submit-button:hover {
	background: rgba(59, 130, 246, 1);
	transform: translateY(-2px);
	box-shadow: 0 12px 40px rgba(59, 130, 246, 0.4);
}

.submit-button:focus {
	outline: none;
	box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.5);
}

.submit-button:active {
	transform: translateY(0);
	transition: all 0.1s ease;
}

/* Loading state for submit button */
.submit-button:disabled {
	background: rgba(100, 100, 100, 0.5);
	cursor: not-allowed;
	transform: none;
	box-shadow: none;
}

.submit-button.loading {
	position: relative;
	color: transparent;
}

.submit-button.loading::after {
	content: "";
	position: absolute;
	top: 50%;
	left: 50%;
	width: 20px;
	height: 20px;
	margin: -10px 0 0 -10px;
	border: 2px solid transparent;
	border-top: 2px solid white;
	border-radius: 50%;
	animation: spin 1s linear infinite;
}

/* Error states */
.form-input.error,
.form-textarea.error {
	background: rgba(255, 200, 200, 0.95);
	box-shadow: 0 0 0 2px rgba(239, 68, 68, 0.3);
}

.error-message {
	color: #fca5a5;
	font-size: 0.85rem;
	margin-top: 0.25rem;
	font-weight: 500;
}

/* Success message */
.success-message {
	background: rgba(34, 197, 94, 0.1);
	border: 1px solid rgba(34, 197, 94, 0.3);
	color: #86efac;
	padding: 1rem;
	border-radius: 8px;
	margin-bottom: 1.5rem;
	text-align: center;
	font-weight: 500;
}

/* Responsive Design */
@media (max-width: 768px) {
	.form-container {
		padding: 1rem;
		margin: 1rem;
	}

	.creator-form {
		gap: 1.25rem;
	}

	.form-label {
		font-size: 1rem;
	}

	.social-title {
		font-size: 1.3rem;
	}

	.submit-button {
		padding: 1.25rem 2rem;
		font-size: 1rem;
		min-width: 100%;
	}
}

@media (max-width: 480px) {
	.form-container {
		padding: 0.75rem;
		margin: 0.5rem;
	}

	.social-label {
		flex-direction: column;
		align-items: flex-start;
		gap: 0.25rem;
	}

	.social-icon {
		font-size: 1rem;
	}
}

/* Animation keyframes */
@keyframes fadeInUp {
	from {
		opacity: 0;
		transform: translateY(30px);
	}
	to {
		opacity: 1;
		transform: translateY(0);
	}
}

@keyframes spin {
	from {
		transform: rotate(0deg);
	}
	to {
		transform: rotate(360deg);
	}
}

/* Focus visible for accessibility */
.form-input:focus-visible,
.form-textarea:focus-visible,
.submit-button:focus-visible {
	outline: 2px solid #60a5fa;
	outline-offset: 2px;
}

/* Hover effects for better UX */
.form-input:hover,
.form-textarea:hover {
	background: rgba(255, 255, 255, 0.98);
}

/* Better visual hierarchy */
.form-group:not(:last-child) {
	margin-bottom: 0.5rem;
}

/* Smooth transitions */
* {
	transition:
		background-color 0.2s ease,
		box-shadow 0.2s ease,
		transform 0.2s ease;
}
